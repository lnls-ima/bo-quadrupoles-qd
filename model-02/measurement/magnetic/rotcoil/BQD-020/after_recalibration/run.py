#!/usr/bin/env python-sirius

import matplotlib.pyplot as plt
import numpy as np


def correct_excdata(plot=True):

    c1_2021 = np.array([0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 20.0, 32.0, 20.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0, ])
    m1_2021 = np.array([-0.003523688, -0.03627514, -0.0694015, -0.1029313, -0.1364411, -0.1701352, -0.3393816, -0.5448922, -0.3428583, -0.1735335, -0.1395119, -0.1055602, -0.07151586, -0.0375285, -0.003544239, ])
    m2_2021 = np.array([-0.003520753, -0.03630472, -0.06944588, -0.1029736, -0.1364778, -0.1701688, -0.3394, -0.5448896, -0.3428414, -0.1735206, -0.1395314, -0.1055724, -0.07150754, -0.037527, -0.003539707, ])
    m3_2021 = np.array([-0.003497776, -0.03626489, -0.06942423, -0.1029232, -0.136451, -0.1701453, -0.3393897, -0.5448661, -0.3428132, -0.1735014, -0.1394947, -0.1055462, -0.07149612, -0.03754705, -0.003534347, ])

    c1_2016 = np.array([0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 20.0, 32.0, 20.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0, ])
    m1_2016 = np.array([-0.003361484, -0.03564, -0.06814749, -0.1008777, -0.1337285, -0.1666271, -0.3320192, -0.5306438, -0.3351554, -0.1697401, -0.1365223, -0.1032675, -0.07002409, -0.03665436, -0.00352268, ])
    m2_2016 = np.array([-0.003328304, -0.03563214, -0.06815176, -0.1008771, -0.1337244, -0.1666243, -0.3320065, -0.5306204, -0.3351596, -0.1697316, -0.1365295, -0.1032755, -0.07000664, -0.03677927, -0.003517801, ])
    m3_2016 = np.array([-0.002678383, -0.03492704, -0.06741965, -0.1001829, -0.1330404, -0.1660019, -0.3314904, -0.5301384, -0.3346037, -0.1690828, -0.1358562, -0.102547, -0.06929842, -0.03604777, -0.002805393, ])

    m_2016_avg = (m1_2016 + m2_2016 + m3_2016)/3
    m_2021_avg = (m1_2021 + m2_2021 + m3_2021)/3

    # hysteresis
    poly = np.polyfit(c1_2016, m_2016_avg, 1)
    m_fit = np.polyval(poly, c1_2016)
    diff1_2016 = 100*(m1_2016 - m_fit) / m_fit
    diff2_2016 = 100*(m2_2016 - m_fit) / m_fit
    diff3_2016 = 100*(m3_2016 - m_fit) / m_fit
    diff1_2021 = 100*(m1_2021 - m_fit) / m_fit
    diff2_2021 = 100*(m2_2021 - m_fit) / m_fit
    diff3_2021 = 100*(m3_2021 - m_fit) / m_fit
    plt.plot(c1_2016[1:-1], diff1_2016[1:-1], 'ro-', label='2016 M1')
    plt.plot(c1_2016[1:-1], diff2_2016[1:-1], 'ro-', label='2016 M2')
    plt.plot(c1_2016[1:-1], diff3_2016[1:-1], 'ro-', label='2016 M3')
    plt.plot(c1_2021[1:-1], diff1_2021[1:-1], 'bo-', label='2021 M1')
    plt.plot(c1_2021[1:-1], diff2_2021[1:-1], 'bo-', label='2021 M2')
    plt.plot(c1_2021[1:-1], diff3_2021[1:-1], 'bo-', label='2021 M3')
    plt.grid()
    plt.legend()
    plt.xlabel('Current [A]')
    plt.ylabel('Difference to 2016 straight line [%]')
    plt.title('BO BQD-020 Hysteresis - 2016 and 2021 Measurements')
    plt.show()

    # difference
    currs = c1_2021[1:8]
    m_2016_avg = (m1_2016[1:8] + m2_2016[1:8] + m3_2016[1:8])/3
    m_2021_avg = (m1_2021[1:8] + m2_2021[1:8] + m3_2021[1:8])/3
    diff = 100*(m_2021_avg - m_2016_avg) / m_2016_avg

    print('current: ', currs)
    print('diff: ', diff)
    plt.plot(currs, diff, 'o-')
    plt.xlabel('Current [A]')
    plt.ylabel('Diff. [%]')
    plt.title('BO BQD-020 2021-2016 KL Meas. Difference')
    plt.grid()
    plt.show()

    # excdata
    excdata = np.array([
        [-0032.00,  +6.886759e-06, +2.187923e-05,  -5.301431e-01, +3.731706e-04,  -9.914736e-04, +2.331647e-02,  -7.140924e-02, -1.688149e-01,  +5.749284e+00, -7.715917e+00,  +2.646188e+04, +2.136504e+02,  -1.753816e+04, -5.914538e+02,  +4.586016e+05, +6.837706e+05,  +4.528832e+07, +2.441582e+07,  -7.006159e+10, +1.812721e+09,  -4.848604e+10, +5.273792e+10,  -6.967074e+11, +1.564943e+12, ],
        [-0020.00,  +7.330100e-06, +1.490348e-05,  -3.318252e-01, +2.448838e-04,  -1.392014e-03, +1.456706e-02,  -5.873841e-02, -9.205328e-02,  +3.510643e+00, -4.647221e+00,  +1.647288e+04, +1.110795e+02,  -1.053790e+04, -4.036545e+03,  +3.308737e+05, +4.411125e+05,  +1.699831e+07, +1.163764e+07,  -4.411031e+10, +8.501485e+08,  -1.299356e+10, -1.382652e+10,  +5.785094e+10, -1.148578e+12, ],
        [-0010.00,  +7.671302e-06, +8.955666e-06,  -1.666675e-01, +1.349568e-04,  -2.123811e-03, +6.496006e-03,  -2.145531e-02, -1.069434e-01,  +1.951554e+00, -5.752299e+00,  +8.292031e+03, -9.685332e+01,  -4.055293e+03, -9.146149e+03,  +2.070371e+05, -2.747811e+05,  +1.186488e+07, -1.940795e+07,  -2.255479e+10, -1.839184e+09,  +3.219905e+10, -3.623195e+10,  +2.246565e+12, -4.597221e+12, ],
        [-0008.00,  +7.692520e-06, +7.989810e-06,  -1.337933e-01, +1.216067e-04,  -2.430822e-03, +5.407485e-03,  -2.547253e-02, -6.791162e-02,  +1.285298e+00, -2.987243e+00,  +6.715043e+03, -1.440783e+01,  -3.937008e+03, -4.502384e+03,  +5.585188e+04, -1.226024e+05,  +2.406937e+06, -1.068874e+07,  -1.786694e+10, -6.365287e+08,  -6.024875e+10, -3.089421e+10,  +7.118103e+11, -2.000880e+12, ],
        [-0006.00,  +7.726437e-06, +6.808672e-06,  -1.010019e-01, +8.396555e-05,  -2.515572e-03, +3.604403e-03,  -1.511645e-02, -7.552352e-02,  +1.480209e+00, -4.323284e+00,  +5.022129e+03, -1.187920e+02,  -4.030258e+03, -7.345196e+03,  +3.838189e+04, -2.909330e+05,  +2.630160e+06, -1.384698e+07,  -1.289395e+10, -2.097482e+09,  -2.442875e+10, -4.446414e+10,  +7.937033e+11, -3.723976e+12, ],
        [-0004.00,  +7.826904e-06, +6.148006e-06,  -6.830279e-02, +7.338974e-05,  -2.568184e-03, +3.310405e-03,  -2.563777e-02, -1.088434e-02,  +1.017466e+00, -1.202569e-01,  +3.426441e+03, +5.859077e+01,  -6.048330e+02, +6.456105e+03,  +1.354432e+05, -1.722735e+04,  +6.598907e+06, +9.919158e+06,  -9.275390e+09, +7.093626e+08,  -4.421606e+09, +6.843653e+10,  +1.755949e+12, +1.112023e+12, ],
        [-0002.00,  +7.794613e-06, +5.115233e-06,  -3.586228e-02, +3.054734e-05,  -2.675953e-03, +1.899992e-03,  -1.437277e-02, +6.994461e-03,  +7.328346e-01, +5.832354e-01,  +1.827566e+03, +1.123134e+02,  -7.978954e+02, +4.342788e+03,  +2.643253e+04, +3.191660e+05,  +4.298909e+06, +1.499037e+07,  -4.600225e+09, +1.036566e+09,  -6.529815e+09, +5.646260e+10,  -4.951611e+11, +2.732506e+12, ],
        [+0002.00,  -7.794613e-06, -5.115233e-06,  +3.586228e-02, -3.054734e-05,  +2.675953e-03, -1.899992e-03,  +1.437277e-02, -6.994461e-03,  -7.328346e-01, -5.832354e-01,  -1.827566e+03, -1.123134e+02,  +7.978954e+02, -4.342788e+03,  -2.643253e+04, -3.191660e+05,  -4.298909e+06, -1.499037e+07,  +4.600225e+09, -1.036566e+09,  +6.529815e+09, -5.646260e+10,  +4.951611e+11, -2.732506e+12, ],
        [+0004.00,  -7.826904e-06, -6.148006e-06,  +6.830279e-02, -7.338974e-05,  +2.568184e-03, -3.310405e-03,  +2.563777e-02, +1.088434e-02,  -1.017466e+00, +1.202569e-01,  -3.426441e+03, -5.859077e+01,  +6.048330e+02, -6.456105e+03,  -1.354432e+05, +1.722735e+04,  -6.598907e+06, -9.919158e+06,  +9.275390e+09, -7.093626e+08,  +4.421606e+09, -6.843653e+10,  -1.755949e+12, -1.112023e+12, ],
        [+0006.00,  -7.726437e-06, -6.808672e-06,  +1.010019e-01, -8.396555e-05,  +2.515572e-03, -3.604403e-03,  +1.511645e-02, +7.552352e-02,  -1.480209e+00, +4.323284e+00,  -5.022129e+03, +1.187920e+02,  +4.030258e+03, +7.345196e+03,  -3.838189e+04, +2.909330e+05,  -2.630160e+06, +1.384698e+07,  +1.289395e+10, +2.097482e+09,  +2.442875e+10, +4.446414e+10,  -7.937033e+11, +3.723976e+12, ],
        [+0008.00,  -7.692520e-06, -7.989810e-06,  +1.337933e-01, -1.216067e-04,  +2.430822e-03, -5.407485e-03,  +2.547253e-02, +6.791162e-02,  -1.285298e+00, +2.987243e+00,  -6.715043e+03, +1.440783e+01,  +3.937008e+03, +4.502384e+03,  -5.585188e+04, +1.226024e+05,  -2.406937e+06, +1.068874e+07,  +1.786694e+10, +6.365287e+08,  +6.024875e+10, +3.089421e+10,  -7.118103e+11, +2.000880e+12, ],
        [+0010.00,  -7.671302e-06, -8.955666e-06,  +1.666675e-01, -1.349568e-04,  +2.123811e-03, -6.496006e-03,  +2.145531e-02, +1.069434e-01,  -1.951554e+00, +5.752299e+00,  -8.292031e+03, +9.685332e+01,  +4.055293e+03, +9.146149e+03,  -2.070371e+05, +2.747811e+05,  -1.186488e+07, +1.940795e+07,  +2.255479e+10, +1.839184e+09,  -3.219905e+10, +3.623195e+10,  -2.246565e+12, +4.597221e+12, ],
        [+0020.00,  -7.330100e-06, -1.490348e-05,  +3.318252e-01, -2.448838e-04,  +1.392014e-03, -1.456706e-02,  +5.873841e-02, +9.205328e-02,  -3.510643e+00, +4.647221e+00,  -1.647288e+04, -1.110795e+02,  +1.053790e+04, +4.036545e+03,  -3.308737e+05, -4.411125e+05,  -1.699831e+07, -1.163764e+07,  +4.411031e+10, -8.501485e+08,  +1.299356e+10, +1.382652e+10,  -5.785094e+10, +1.148578e+12, ],
        [+0032.00,  -6.886759e-06, -2.187923e-05,  +5.301431e-01, -3.731706e-04,  +9.914736e-04, -2.331647e-02,  +7.140924e-02, +1.688149e-01,  -5.749284e+00, +7.715917e+00,  -2.646188e+04, -2.136504e+02,  +1.753816e+04, +5.914538e+02,  -4.586016e+05, -6.837706e+05,  -4.528832e+07, -2.441582e+07,  +7.006159e+10, -1.812721e+09,  +4.848604e+10, -5.273792e+10,  +6.967074e+11, -1.564943e+12, ],
    ])


    for datum in excdata:
        curr, *mpoles = datum
        mpoles = np.array(mpoles)
        corr = 1 + np.interp(abs(curr), currs, diff)/100
        mpoles *= corr
        print('{:+08.2f}  '.format(curr), end='')
        for i in range(len(mpoles)//2):
            print('{:+.6e} {:+.6e}  '.format(mpoles[2*i+0], mpoles[2*i+1]), end='')
        print()


correct_excdata(plot=True)
